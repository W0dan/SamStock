//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("StockBeheerModel", "FK_PedalComponent_Component", "Component", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SamStock.Database.Component), "PedalComponent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SamStock.Database.PedalComponent), true)]
[assembly: EdmRelationshipAttribute("StockBeheerModel", "FK_PedalComponent_Pedal", "Pedal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SamStock.Database.Pedal), "PedalComponent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SamStock.Database.PedalComponent), true)]
[assembly: EdmRelationshipAttribute("StockBeheerModel", "FK_Component_Leverancier1", "Supplier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SamStock.Database.Supplier), "Component", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SamStock.Database.Component), true)]

#endregion

namespace SamStock.Database
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class StockBeheerEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new StockBeheerEntities object using the connection string found in the 'StockBeheerEntities' section of the application configuration file.
        /// </summary>
        public StockBeheerEntities() : base("name=StockBeheerEntities", "StockBeheerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new StockBeheerEntities object.
        /// </summary>
        public StockBeheerEntities(string connectionString) : base(connectionString, "StockBeheerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new StockBeheerEntities object.
        /// </summary>
        public StockBeheerEntities(EntityConnection connection) : base(connection, "StockBeheerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Component> Component
        {
            get
            {
                if ((_Component == null))
                {
                    _Component = base.CreateObjectSet<Component>("Component");
                }
                return _Component;
            }
        }
        private ObjectSet<Component> _Component;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Pedal> Pedal
        {
            get
            {
                if ((_Pedal == null))
                {
                    _Pedal = base.CreateObjectSet<Pedal>("Pedal");
                }
                return _Pedal;
            }
        }
        private ObjectSet<Pedal> _Pedal;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PedalComponent> PedalComponent
        {
            get
            {
                if ((_PedalComponent == null))
                {
                    _PedalComponent = base.CreateObjectSet<PedalComponent>("PedalComponent");
                }
                return _PedalComponent;
            }
        }
        private ObjectSet<PedalComponent> _PedalComponent;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Supplier> Supplier
        {
            get
            {
                if ((_Supplier == null))
                {
                    _Supplier = base.CreateObjectSet<Supplier>("Supplier");
                }
                return _Supplier;
            }
        }
        private ObjectSet<Supplier> _Supplier;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdminData> AdminData
        {
            get
            {
                if ((_AdminData == null))
                {
                    _AdminData = base.CreateObjectSet<AdminData>("AdminData");
                }
                return _AdminData;
            }
        }
        private ObjectSet<AdminData> _AdminData;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Component EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComponent(Component component)
        {
            base.AddObject("Component", component);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pedal EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPedal(Pedal pedal)
        {
            base.AddObject("Pedal", pedal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PedalComponent EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPedalComponent(PedalComponent pedalComponent)
        {
            base.AddObject("PedalComponent", pedalComponent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Supplier EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSupplier(Supplier supplier)
        {
            base.AddObject("Supplier", supplier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdminData EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdminData(AdminData adminData)
        {
            base.AddObject("AdminData", adminData);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StockBeheerModel", Name="AdminData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdminData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdminData object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static AdminData CreateAdminData(global::System.Int32 id, global::System.String name, global::System.Decimal value)
        {
            AdminData adminData = new AdminData();
            adminData.Id = id;
            adminData.Name = name;
            adminData.Value = value;
            return adminData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StockBeheerModel", Name="Component")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Component : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Component object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="minimumStock">Initial value of the MinimumStock property.</param>
        /// <param name="stocknr">Initial value of the Stocknr property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="stock">Initial value of the Stock property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="supplierId">Initial value of the SupplierId property.</param>
        public static Component CreateComponent(global::System.Int32 id, global::System.Int32 minimumStock, global::System.String stocknr, global::System.String name, global::System.Int32 stock, global::System.Decimal price, global::System.Int32 supplierId)
        {
            Component component = new Component();
            component.Id = id;
            component.MinimumStock = minimumStock;
            component.Stocknr = stocknr;
            component.Name = name;
            component.Stock = stock;
            component.Price = price;
            component.SupplierId = supplierId;
            return component;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MinimumStock
        {
            get
            {
                return _MinimumStock;
            }
            set
            {
                OnMinimumStockChanging(value);
                ReportPropertyChanging("MinimumStock");
                _MinimumStock = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinimumStock");
                OnMinimumStockChanged();
            }
        }
        private global::System.Int32 _MinimumStock;
        partial void OnMinimumStockChanging(global::System.Int32 value);
        partial void OnMinimumStockChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Stocknr
        {
            get
            {
                return _Stocknr;
            }
            set
            {
                OnStocknrChanging(value);
                ReportPropertyChanging("Stocknr");
                _Stocknr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Stocknr");
                OnStocknrChanged();
            }
        }
        private global::System.String _Stocknr;
        partial void OnStocknrChanging(global::System.String value);
        partial void OnStocknrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Stock
        {
            get
            {
                return _Stock;
            }
            set
            {
                OnStockChanging(value);
                ReportPropertyChanging("Stock");
                _Stock = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stock");
                OnStockChanged();
            }
        }
        private global::System.Int32 _Stock;
        partial void OnStockChanging(global::System.Int32 value);
        partial void OnStockChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupplierId
        {
            get
            {
                return _SupplierId;
            }
            set
            {
                OnSupplierIdChanging(value);
                ReportPropertyChanging("SupplierId");
                _SupplierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupplierId");
                OnSupplierIdChanged();
            }
        }
        private global::System.Int32 _SupplierId;
        partial void OnSupplierIdChanging(global::System.Int32 value);
        partial void OnSupplierIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemCode
        {
            get
            {
                return _ItemCode;
            }
            set
            {
                OnItemCodeChanging(value);
                ReportPropertyChanging("ItemCode");
                _ItemCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ItemCode");
                OnItemCodeChanged();
            }
        }
        private global::System.String _ItemCode;
        partial void OnItemCodeChanging(global::System.String value);
        partial void OnItemCodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StockBeheerModel", "FK_PedalComponent_Component", "PedalComponent")]
        public EntityCollection<PedalComponent> PedalComponent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PedalComponent>("StockBeheerModel.FK_PedalComponent_Component", "PedalComponent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PedalComponent>("StockBeheerModel.FK_PedalComponent_Component", "PedalComponent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StockBeheerModel", "FK_Component_Leverancier1", "Supplier")]
        public Supplier Supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("StockBeheerModel.FK_Component_Leverancier1", "Supplier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("StockBeheerModel.FK_Component_Leverancier1", "Supplier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> SupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("StockBeheerModel.FK_Component_Leverancier1", "Supplier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("StockBeheerModel.FK_Component_Leverancier1", "Supplier", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StockBeheerModel", Name="Pedal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pedal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Pedal object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static Pedal CreatePedal(global::System.Int32 id, global::System.String name, global::System.Decimal price)
        {
            Pedal pedal = new Pedal();
            pedal.Id = id;
            pedal.Name = name;
            pedal.Price = price;
            return pedal;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Margin
        {
            get
            {
                return _Margin;
            }
            set
            {
                OnMarginChanging(value);
                ReportPropertyChanging("Margin");
                _Margin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Margin");
                OnMarginChanged();
            }
        }
        private Nullable<global::System.Decimal> _Margin;
        partial void OnMarginChanging(Nullable<global::System.Decimal> value);
        partial void OnMarginChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StockBeheerModel", "FK_PedalComponent_Pedal", "PedalComponent")]
        public EntityCollection<PedalComponent> PedalComponent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PedalComponent>("StockBeheerModel.FK_PedalComponent_Pedal", "PedalComponent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PedalComponent>("StockBeheerModel.FK_PedalComponent_Pedal", "PedalComponent", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StockBeheerModel", Name="PedalComponent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PedalComponent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PedalComponent object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="componentId">Initial value of the ComponentId property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="pedalId">Initial value of the PedalId property.</param>
        public static PedalComponent CreatePedalComponent(global::System.Int32 id, global::System.Int32 componentId, global::System.Int32 number, global::System.Int32 pedalId)
        {
            PedalComponent pedalComponent = new PedalComponent();
            pedalComponent.Id = id;
            pedalComponent.ComponentId = componentId;
            pedalComponent.Number = number;
            pedalComponent.PedalId = pedalId;
            return pedalComponent;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ComponentId
        {
            get
            {
                return _ComponentId;
            }
            set
            {
                OnComponentIdChanging(value);
                ReportPropertyChanging("ComponentId");
                _ComponentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComponentId");
                OnComponentIdChanged();
            }
        }
        private global::System.Int32 _ComponentId;
        partial void OnComponentIdChanging(global::System.Int32 value);
        partial void OnComponentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PedalId
        {
            get
            {
                return _PedalId;
            }
            set
            {
                OnPedalIdChanging(value);
                ReportPropertyChanging("PedalId");
                _PedalId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PedalId");
                OnPedalIdChanged();
            }
        }
        private global::System.Int32 _PedalId;
        partial void OnPedalIdChanging(global::System.Int32 value);
        partial void OnPedalIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StockBeheerModel", "FK_PedalComponent_Component", "Component")]
        public Component Component
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("StockBeheerModel.FK_PedalComponent_Component", "Component").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("StockBeheerModel.FK_PedalComponent_Component", "Component").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Component> ComponentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("StockBeheerModel.FK_PedalComponent_Component", "Component");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Component>("StockBeheerModel.FK_PedalComponent_Component", "Component", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StockBeheerModel", "FK_PedalComponent_Pedal", "Pedal")]
        public Pedal Pedal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pedal>("StockBeheerModel.FK_PedalComponent_Pedal", "Pedal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pedal>("StockBeheerModel.FK_PedalComponent_Pedal", "Pedal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Pedal> PedalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pedal>("StockBeheerModel.FK_PedalComponent_Pedal", "Pedal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Pedal>("StockBeheerModel.FK_PedalComponent_Pedal", "Pedal", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StockBeheerModel", Name="Supplier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Supplier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Supplier object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Supplier CreateSupplier(global::System.Int32 id, global::System.String name)
        {
            Supplier supplier = new Supplier();
            supplier.Id = id;
            supplier.Name = name;
            return supplier;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StockBeheerModel", "FK_Component_Leverancier1", "Component")]
        public EntityCollection<Component> Component
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Component>("StockBeheerModel.FK_Component_Leverancier1", "Component");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Component>("StockBeheerModel.FK_Component_Leverancier1", "Component", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
